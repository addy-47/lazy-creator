import { useState, useEffect, useRef } from "react";
import {
  Quote,
  MousePointerClick,
  ArrowUp,
  ArrowDown,
  Star,
} from "lucide-react";
import StickFigureAnimation from "./StickFigureAnimation";

const testimonialsData = [
  {
    id: 1,
    author: "Sarah Johnson",
    role: "Content Creator",
    avatarSrc: "/testimonials/creator-1.jpg",
    content:
      "LazyCreator has completely transformed how I approach YouTube Shorts. I can produce a week's worth of content in just a few hours, with professional results every time.",
    rating: 5,
  },
  {
    id: 2,
    author: "Michael Chen",
    role: "Travel Vlogger",
    avatarSrc: "/testimonials/creator-2.jpg",
    content:
      "The AI-powered automation is mind-blowing. What used to take me days now takes minutes, and the engagement on my Shorts has increased by over 200% since I started using LazyCreator.",
    rating: 5,
  },
  {
    id: 3,
    author: "Elena Rodriguez",
    role: "Educational Content Creator",
    avatarSrc: "/testimonials/creator-3.jpg",
    content:
      "As someone who creates educational content, the quality and professionalism of the Shorts generated by LazyCreator is impressive. My audience retention has improved significantly.",
    rating: 5,
  },
  {
    id: 4,
    author: "James Wilson",
    role: "Tech Reviewer",
    avatarSrc: "/testimonials/creator-4.jpg",
    content:
      "The direct YouTube integration and metadata optimization is a game changer. My Shorts get more views and better ranking since I started using LazyCreator.",
    rating: 4,
  },
];

const Testimonials = () => {
  const [activeIndex, setActiveIndex] = useState(0);
  const [isVisible, setIsVisible] = useState(false);
  const containerRef = useRef<HTMLDivElement>(null);

  // Animation when component comes into view
  useEffect(() => {
    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry.isIntersecting) {
          setIsVisible(true);
        }
      },
      { threshold: 0.2 }
    );

    if (containerRef.current) {
      observer.observe(containerRef.current);
    }

    return () => observer.disconnect();
  }, []);

  // Auto-rotate testimonials
  useEffect(() => {
    const interval = setInterval(() => {
      setActiveIndex((prev) => (prev + 1) % testimonialsData.length);
    }, 8000);

    return () => clearInterval(interval);
  }, []);

  const navigateTestimonial = (direction: "next" | "prev") => {
    if (direction === "next") {
      setActiveIndex((prev) => (prev + 1) % testimonialsData.length);
    } else {
      setActiveIndex(
        (prev) => (prev - 1 + testimonialsData.length) % testimonialsData.length
      );
    }
  };

  return (
    <section
      className="section py-24 dark:bg-[#0A0A0A] light:bg-white relative"
      ref={containerRef}
    >
      {/* Background elements */}
      <div className="absolute inset-0 overflow-hidden pointer-events-none">
        <div className="absolute left-1/4 top-24 w-64 h-64 rounded-full dark:bg-[#800000]/5 light:bg-[#800000]/5 blur-3xl"></div>
        <div className="absolute right-1/4 bottom-24 w-64 h-64 rounded-full dark:bg-[#E0115F]/5 light:bg-[#E0115F]/5 blur-3xl"></div>

        {/* Quote decoration */}
        <div className="absolute top-10 left-10 opacity-5">
          <Quote size={120} />
        </div>
        <div className="absolute bottom-10 right-10 opacity-5 transform rotate-180">
          <Quote size={120} />
        </div>
      </div>

      <div className="container-tight relative z-10">
        <div
          className={`text-center max-w-2xl mx-auto mb-16 transition-all duration-1000 ${
            isVisible ? "opacity-100" : "opacity-0 translate-y-8"
          }`}
        >
          <h2 className="font-semibold text-4xl mb-4 text-transparent bg-clip-text bg-gradient-to-r from-[#800000] via-[#722F37] to-[#E0115F]">
            Hear from Our Creators
          </h2>
          <p className="text-lg dark:text-gray-300 light:text-gray-700">
            Real feedback from content creators who have transformed their
            YouTube Shorts strategy
          </p>
        </div>

        {/* Main testimonial card */}
        <div
          className={`relative max-w-4xl mx-auto transition-all duration-1000 ${
            isVisible ? "opacity-100" : "opacity-0 translate-y-8"
          }`}
        >
          <div className="glass-card-ruby px-6 py-8 md:p-10 relative">
            {/* Quote icon */}
            <div className="absolute left-6 top-6 dark:text-[#E0115F]/20 light:text-[#E0115F]/40">
              <Quote size={42} />
            </div>

            {/* Testimonial content */}
            <div className="pt-10 pb-4 px-6 md:px-10 relative">
              <p className="text-xl md:text-2xl leading-relaxed dark:text-gray-200 light:text-gray-700 mb-8">
                "{testimonialsData[activeIndex].content}"
              </p>

              {/* Author info */}
              <div className="flex items-center">
                <div className="w-12 h-12 rounded-full bg-gradient-to-br from-[#800000] to-[#E0115F] flex items-center justify-center text-white text-xl font-bold">
                  {testimonialsData[activeIndex].author.charAt(0)}
                </div>
                <div className="ml-4">
                  <div className="font-medium dark:text-white light:text-gray-800">
                    {testimonialsData[activeIndex].author}
                  </div>
                  <div className="text-sm dark:text-gray-400 light:text-gray-600">
                    {testimonialsData[activeIndex].role}
                  </div>
                </div>
                <div className="ml-auto flex">
                  {Array.from({ length: 5 }).map((_, i) => (
                    <Star
                      key={i}
                      size={18}
                      className={`${
                        i < testimonialsData[activeIndex].rating
                          ? "text-amber-400 fill-amber-400"
                          : "text-gray-400"
                      }`}
                    />
                  ))}
                </div>
              </div>
            </div>

            {/* Navigation controls */}
            <div className="absolute right-6 bottom-6 flex space-x-2">
              <button
                onClick={() => navigateTestimonial("prev")}
                className="w-10 h-10 rounded-full dark:bg-black/30 light:bg-gray-100 border dark:border-[#722F37]/30 light:border-gray-300 flex items-center justify-center hover:dark:bg-black/50 hover:light:bg-gray-200 transition-colors"
              >
                <ArrowUp
                  size={18}
                  className="dark:text-gray-400 light:text-gray-600"
                />
              </button>
              <button
                onClick={() => navigateTestimonial("next")}
                className="w-10 h-10 rounded-full dark:bg-black/30 light:bg-gray-100 border dark:border-[#722F37]/30 light:border-gray-300 flex items-center justify-center hover:dark:bg-black/50 hover:light:bg-gray-200 transition-colors"
              >
                <ArrowDown
                  size={18}
                  className="dark:text-gray-400 light:text-gray-600"
                />
              </button>
            </div>
          </div>

          {/* Pagination indicator */}
          <div className="flex justify-center mt-6 space-x-2">
            {testimonialsData.map((_, index) => (
              <button
                key={index}
                onClick={() => setActiveIndex(index)}
                className={`w-2 h-2 rounded-full transition-all duration-300 ${
                  index === activeIndex ? "w-8 bg-[#E0115F]" : "bg-gray-600/30"
                }`}
                aria-label={`Go to testimonial ${index + 1}`}
              ></button>
            ))}
          </div>
        </div>

        {/* Call-to-action card */}
        <div
          className={`mt-20 max-w-2xl mx-auto text-center transition-all duration-1000 delay-300 ${
            isVisible ? "opacity-100" : "opacity-0 translate-y-8"
          }`}
        >
          <div className="glass-card p-8 flex flex-col items-center">
            <div className="w-16 h-16 rounded-full dark:bg-[#800000]/10 light:bg-[#800000]/10 flex items-center justify-center mb-4">
              <MousePointerClick
                size={28}
                className="text-[#E0115F] animate-bounce"
              />
            </div>
            <h3 className="text-xl font-medium mb-2 dark:text-white light:text-gray-800">
              Ready to revolutionize your content?
            </h3>
            <p className="dark:text-gray-400 light:text-gray-600 mb-6">
              Join thousands of creators who've transformed their YouTube Shorts
              strategy.
            </p>
            <a
              href="/create"
              className="px-6 py-3 rounded-full bg-gradient-to-r from-[#800000] to-[#E0115F] text-white font-medium hover:shadow-lg hover:shadow-[#E0115F]/20 transition-shadow"
            >
              Start Creating Now
            </a>
          </div>
        </div>
      </div>
    </section>
  );
};

export default Testimonials;
